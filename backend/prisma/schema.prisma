datasource db {
  provider = "postgresql" // или "sqlite" для dev
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  name      String?
  password  String?  // hashed
  role      String   @default("user") // "admin"
  blocked   Boolean  @default(false)
  inventories Inventory[] @relation("owner")
  accesses  InventoryAccess[]
  createdAt DateTime @default(now())
}

model Inventory {
  id         String  @id @default(uuid())
  title      String
  description String?
  category   String
  imageUrl   String?
  ownerId    String
  owner      User    @relation(fields: [ownerId], references: [id], name: "owner")
  public     Boolean @default(false)
  tags       String[] @default([])
  fields     Json     // optional JSON definition of fields OR use InventoryField model
  items      Item[]
  accesses   InventoryAccess[]
  createdAt  DateTime @default(now())
}

model InventoryAccess {
  id          String @id @default(uuid())
  inventory   Inventory @relation(fields:[inventoryId], references:[id])
  inventoryId String
  user        User @relation(fields:[userId], references:[id])
  userId      String
  write       Boolean @default(true)
  createdAt   DateTime @default(now())
  @@unique([inventoryId, userId])
}

model Item {
  id          String   @id @default(uuid())
  inventoryId String
  inventory   Inventory @relation(fields:[inventoryId], references:[id])
  customId    String
  data        Json     // stores field values per inventory definition
  version     Int      @default(1)
  createdById String?
  createdBy   User?    @relation(fields:[createdById], references:[id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([inventoryId, customId])
}
